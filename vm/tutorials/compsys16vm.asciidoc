= Tutorial: Getting started with the VirtualBox image
CompSys 2016 Course Team
v1.0, September 5, 2016
:doctype: article
:backend: html5
:docinfo:
:sectanchors:
:sectnums:
:toc:

To make it easier for you to get started with the tools that you need for this
course, we've set up a VirtualBox image with all the tools that you will need.
Follow this guide to get started with the VirtualBox image.

== The VirtualBox Image

https://www.virtualbox.org/[Oracle VM VirtualBox] is a free software that can
create, run, and monitor virtual machines (VMs). This sort of software is
typically called a https://en.wikipedia.org/wiki/Hypervisor[hypervisor]. Go
ahead and https://www.virtualbox.org/wiki/Downloads#VirtualBoxbinaries[install
VirtualBox on your host operating system].

[IMPORTANT]
.Enable Hardware Virtualization
====

On most systems, "hardware virtualization" must first be enabled in the
BIOS/UEFI configurations before VirtualBox can run effectively. Restart your
computer, enter the BIOS/UEFI. Enable the "hardware virtualization" feature for
your CPU. (This features is called VT-x on Intel, and AMD-V on AMD systems.)

====

We have prepared a couple
https://en.wikipedia.org/wiki/Open_Virtualization_Format[Open Virtual Appliance
(OVA)] images which you can _import_ in your VirtualBox:

* link:compsys16-debian-v1.0-32-bit.ova[32-bit]
* link:compsys16-debian-v1.0-64-bit.ova[64-bit]

[TIP]
.Checksums
====

A checksum is an almost unique alphanumeric code generated based on the
contents of a file. A checksum is often used to check the integrity of a file.

It is important to check the checksum the files you download over an insecure
network (such as http), and from otherwise untrusted services. This gives you
more confidence that you got what you intended.

The SHA256 checksums are:

* 32-bit: `aad5786878693903746aef387c7836da03f401cd548fb0eeb6c044e04510dc03`
* 64-bit: `5ec4076b7957b04ef7e0f7588638c4594e09f79463e623d1bca82b18858a5b82`

On Linux/OS X you can use the program `sha256sum`:

----
$ sha25sum <file>.ova
----

On Windows, you can use `certUtil`:

----
> certUtil -hashfile <file>.ova SHA256
----

====

Once you have a good-looking OVA-file, and have VirtualBox
installed, you can either use the GUI:

. Open up VirtualBox and choose File → Import Appliance.
. Choose a virtual appliance to import: your OVA-file.
. Press "Next" and "Import".

You now have a virtual image `<file>` in your left-hand sidebar. Select it,
hold down Shift, and press "Start". This will start it in "headless" mode.

We suggest working headless with this VM. We will use SSH to log into the box
as one would log in on a server over the Internet.

_Or_ you can use the command-line:

----
VBoxManage import <file>.ova
VBoxManage startvm <file> --type headless
----

[TIP]
.Windows PATH
====

On Windows, you will need to add `C:\Program Files\Oracle\VirtualBox` to you
`PATH` Environment Variable before you can frivolously use `VBoxManage` from
the command-line.

====

[IMPORTANT]
.Allow VirtualBox to access your private network
====

Otherwise, you won't be able to login via SSH.

====

Welcome to Debian GNU/Linux:

* Your hostname is "syrakuse".
* Your username is "archimedes".
* Your password is "hamster".

We suggest using SSH to log into the machine. The VirtualBox image is set to
forward host port 1337 to guest port 22 (SSH) on the client. So connect to
`localhost` via port 1337.

In the near future you will also need to make sure that you have X11 forwarding
enabled when you fire up an SSH session.

[TIP]
.SSH with X11 Forwarding on Windows
====

First and foremost, you should allow VirtualBox to access your private network,
as we would like to log into a "localhost" via SSH.

We recommend installing
http://sourceforge.net/projects/xming/files/Xming/6.9.0.31/Xming-6-9-0-31-setup.exe/download[Xming]
and downloading
http://the.earth.li/~sgtatham/putty/latest/x86/putty.exe[PuTTY].  Our scripts
(below) assume you have started Xming and have PuTTY in your PATH.

Xming is an X server for Windows. When you start Xming it will start a
_background process_, so seemingly nothing will happen. Start Xming first.

Now, fire up PuTTY and specify `localhost` as the address and port 1337. To
enable X11 Forwarding you also need to tick off Connection → SSH → X11 → Enable
X11 forwarding. You can save this configuration for later use, or use the login
script below.

To test that X11 works, try typing the command `xclock` once you log in.

====

To make all this easier, we've set up a login script:

* link:login.sh[Linux/OS X]
* link:login.bat[Windows]

[TIP]
.Windows PATH
====

On Windows, you will need to add the folder whereto you downloaded PuTTY in
your `PATH` Environment Variable before you can use the given script.

====

The prompt you'll be greeted with is canonical:

----
archimedes@syracuse:~$
----

The syntax here is `<username>@<hostname>:<current working dirctory>`.
Throughout the remainder of this course, we won't mention any archimedes at
syrakuse, and just state the working directory, if necessary.

Happy hacking :-)

[TIP]
.Trouble starting the virtual machine? The virtual machine is sloooow?
====

If you are getting a warning like:

____
VT-x/AMD-V hardware acceleration is not available on your system.
____

You need to enable "hardware virtualization" in your BIOS/UEFI configurations.
Restart your computer, enter the BIOS/UEFI. Enable the "hardware
virtualization" feature for your CPU. (This features is called VT-x on Intel,
and AMD-V on AMD systems.)

====

=== Shutdown

To properly shutdown the machine you should issue the following command while
logged into the box:

----
sudo shudown -h now
----

To make this easier, we provide shutdown scripts, similar to our login scripts:

* link:shutdown.sh[Linux/OS X]
* link:shutdown.bat[Windows]

END OF TUTORIAL
